name: MetalLB-E2E-FRR-K8S
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+"
defaults:
  run:
    shell: bash
    working-directory: metallboperator
jobs:
  main:
    runs-on: ubuntu-20.04
    env:
      built_image: "metallb-operator:ci" # Arbitrary name
    strategy:
      matrix:
        go: ["1.20"]
    name: Go ${{ matrix.go }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout Metal LB Operator
        uses: actions/checkout@v2
        with:
          path: metallboperator
          fetch-depth: 0 # Fetch all history for all tags and branches

      - uses: actions/setup-go@v2
        id: go
        with:
          go-version: ${{ matrix.go }}

      - name: Verify modules
        run: go mod verify
      - name: Verify format
        run: |
          make fmt
          git diff --exit-code

      - name: Verify manifests
        run: |
          make manifests
          git diff --exit-code

      - name: Read metallb ref
        id: metallb_ref
        run: echo "content=$(cat ./hack/metallb_ref.txt)" >> $GITHUB_OUTPUT

      - name: Checkout MetalLB
        uses: actions/checkout@v2
        with:
          repository: metallb/metallb
          path: metallb
          ref: "${{ steps.metallb_ref.outputs.content }}"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install linux-modules-extra-$(uname -r) python3-pip arping ndisc6
          sudo pip3 install -r ${GITHUB_WORKSPACE}/metallb/dev-env/requirements.txt
          go install github.com/onsi/ginkgo/v2/ginkgo@v2.4.0
      
      - name: Build image
        run: |
          IMG=${built_image} make docker-build

      - name: Create multi-node K8s Kind Cluster
        run: |
          ./hack/kind-multi-node-cluster-without-registry.sh
          kind load docker-image ${built_image}
          ./hack/create_second_interface.sh

      - name: Deploy Prometheus
        run: |
          make deploy-prometheus

      - name: Deploy MetalLB Operator using frr-k8s mode
        run: |
          IMG=${built_image} KUSTOMIZE_DEPLOY_DIR="config/frr-k8s-on-ci/" make deploy

      - name: Ensure MetalLB operator is ready
        run: |
          while [ "$(kubectl get pods -n metallb-system -l control-plane='controller-manager' -o jsonpath='{.items[*].status.containerStatuses[0].ready}')" != "true" ]; do
            sleep 5
            echo "Waiting for operator pod to be ready."
          done

      - name: Create MetalLB resource
        run: |
          export KUBECONFIG=${HOME}/.kube/config
          kubectl apply -f config/samples/metallb.yaml

      - name: MetalLB E2E Tests
        run: |
          cd ${GITHUB_WORKSPACE}/metallb
          sudo -E env "PATH=$PATH" inv e2etest --skip "IPV6|DUALSTACK" -e /tmp/kind_logs

      - name: Change permissions for kind logs
        if: ${{ failure() }}
        run: |
          sudo chmod -R o+r /tmp/kind_logs

      - name: Archive kind logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: kind_logs
          path: /tmp/kind_logs
